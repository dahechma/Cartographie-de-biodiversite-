import React, { useState, useEffect } from 'react';
import axios from 'axios';
import Navbar from './Navbar';

const AjoutExploitationForm = () => {
  const [donnees, setDonnees] = useState({
    nom: '',
    surface: 0,
  });

  // État pour vérifier si l'utilisateur est authentifié
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  useEffect(() => {
    // Vérifier l'authentification ici (par exemple, en envoyant une requête au backend)
    const checkAuthentication = async () => {
      try {
        const response = await axios.get('http://127.0.0.1:8000/check_authentication/');
        setIsAuthenticated(response.data.isAuthenticated);
      } catch (error) {
        console.error('Erreur lors de la vérification de l\'authentification :', error);
      }
    };

    checkAuthentication();
  }, []);

  if (!isAuthenticated) {
    return <p>Vous n'êtes pas authentifié. Redirection vers la page de connexion...</p>;
  }

  const envoyerDonnees = async (e) => {
    e.preventDefault();
    try {
      const url = 'http://127.0.0.1:8000/ajout_exploitation/';
      const reponse = await axios.post(url, donnees);
      console.log(reponse.data);
      redirectUserToAjoutParcelle();
    } catch (erreur) {
      console.error('Erreur lors de l\'envoi des données :', erreur);
    }
  };
  const redirectUserToAjoutParcelle = () => {
    // Replace this line with the actual redirection logic
    window.location.href = '/AjouterParcelle';
  };

  const handleChange = (e) => {
    setDonnees({ ...donnees, [e.target.name]: e.target.value });
  };

  return (
    <div className="container mt-5">
      <Navbar />
      <div className="conteneur">
      <div className="text-center">
        <h1 className="mt-3">Ajout d'exploitation</h1>
        <form onSubmit={envoyerDonnees} className="text-center">
          <div className="form-group">
            <label htmlFor="id_name">Nom de l'exploitation</label>
            <input
              type="text"
              name="nom"
              maxLength="100"
              required
              id="id_name"
              className="form-control"
              placeholder="Nom de l'exploitation"
              value={donnees.nom}
              onChange={handleChange}
            />
          </div>

          <div className="form-group">
            <label htmlFor="id_surface">Surface (en m²)</label>
            <input
              type="number"
              name="surface"
              required
              id="id_surface"
              className="form-control"
              placeholder="Surface"
              value={donnees.surface}
              onChange={handleChange}
            />
          </div>

          <button type="submit" className="btn btn-primary">
            Ajouter Exploitation
          </button>
        </form>
      </div>
      </div>
    </div>
  );
};

export default AjoutExploitationForm;
